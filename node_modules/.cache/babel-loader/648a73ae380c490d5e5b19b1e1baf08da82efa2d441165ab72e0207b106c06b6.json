{"ast":null,"code":"var _jsxFileName = \"/home/ros/Desktop/github/value_one/src/RobotInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RobotInfo = () => {\n  _s();\n  const [robotData, setRobotData] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchRobotData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          alert('로그인이 필요합니다.');\n          navigate('/Login');\n          return;\n        }\n        const response = await axios.get('http://127.0.0.1:8000/robot-service/robots');\n        setRobotData(response.data);\n      } catch (error) {\n        console.error(error);\n        alert('로봇 정보를 가져오는 데 실패했습니다. 다시 시도해주세요.');\n      }\n    };\n    fetchRobotData();\n    const intervalId = setInterval(fetchRobotData, 1000);\n    return () => clearInterval(intervalId); // 컴포넌트가 언마운트될 때 인터벌을 제거합니다.\n  }, []);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      height: '100vh',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB85C\\uBD07 \\uC815\\uBCF4 \\uD654\\uBA74\\uC785\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: robotData.map((robot, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"\\uB85C\\uBD07 \", index, \": \", robot.current_posj_0, \", \", robot.current_posj_1, \", \", robot.current_posj_2, \",\", ' ', robot.current_posj_3, \", \", robot.current_posj_4, \", \", robot.current_posj_5, \" (\", robot.now, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Login\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"\\uB85C\\uADF8\\uC778 \\uD654\\uBA74\\uC73C\\uB85C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(RobotInfo, \"2WRN8dMaOwfurIPqg3wG/sd0g+0=\", false, function () {\n  return [useNavigate];\n});\n_c = RobotInfo;\nexport default RobotInfo;\nvar _c;\n$RefreshReg$(_c, \"RobotInfo\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","jsxDEV","_jsxDEV","RobotInfo","_s","robotData","setRobotData","navigate","fetchRobotData","token","localStorage","getItem","alert","response","get","data","error","console","intervalId","setInterval","clearInterval","handleLogout","removeItem","style","display","justifyContent","alignItems","width","height","flexDirection","children","fileName","_jsxFileName","lineNumber","columnNumber","map","robot","index","current_posj_0","current_posj_1","current_posj_2","current_posj_3","current_posj_4","current_posj_5","now","marginTop","to","onClick","_c","$RefreshReg$"],"sources":["/home/ros/Desktop/github/value_one/src/RobotInfo.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst RobotInfo = () => {  \n  const [robotData, setRobotData] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchRobotData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          alert('로그인이 필요합니다.');\n          navigate('/Login');          \n          return;\n        }\n\n    const response = await axios.get('http://127.0.0.1:8000/robot-service/robots');       \n        setRobotData(response.data);\n      } catch (error) {\n        console.error(error);\n        alert('로봇 정보를 가져오는 데 실패했습니다. 다시 시도해주세요.');\n      }\n    };\n\n    fetchRobotData();\n    const intervalId = setInterval(fetchRobotData, 1000); \n\n    return () => clearInterval(intervalId); // 컴포넌트가 언마운트될 때 인터벌을 제거합니다.\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n  };\n  \n    \n  return (\n        <div style={{ \n        display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100vh', flexDirection: 'column', \n        }}\n        >\n\n        <h1>로봇 정보 화면입니다</h1>        \n        <ul>\n        {robotData.map((robot, index) => (\n          <li key={index}>\n            로봇 {index}: {robot.current_posj_0}, {robot.current_posj_1}, {robot.current_posj_2},{' '}\n            {robot.current_posj_3}, {robot.current_posj_4}, {robot.current_posj_5} ({robot.now})\n          </li>\n        ))}\n      </ul>\n        \n        <div style={{ marginTop: '20px' }}>\n        <Link to=\"/Login\">\n        <button onClick={handleLogout}>로그인 화면으로</button>\n        </Link>      \n      </div> \n     </div>\n    );\n};\n\nexport default RobotInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}