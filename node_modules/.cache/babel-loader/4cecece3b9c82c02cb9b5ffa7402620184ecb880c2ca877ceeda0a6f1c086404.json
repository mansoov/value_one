{"ast":null,"code":"var _jsxFileName = \"/home/ros/Desktop/github/value_one/src/RobotInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RobotInfo = () => {\n  _s();\n  const [robotData, setRobotData] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchRobotData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          alert('로그인이 필요합니다.');\n          history.push('/Login');\n          return;\n        }\n        const response = await axios.get('http://127.0.0.1:8000/user-service/RobotInfo', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setRobotData(response.data);\n      } catch (error) {\n        console.error(error);\n        alert('로봇 정보를 가져오는 데 실패했습니다. 다시 시도해주세요.');\n      }\n    };\n    fetchRobotData();\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      height: '100vh',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB85C\\uBD07 \\uC815\\uBCF4 \\uD654\\uBA74\\uC785\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Login\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uB85C\\uADF8\\uC778 \\uD654\\uBA74\\uC73C\\uB85C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(RobotInfo, \"yTyeyOmHnxw4k5pmT1GkzpiPHq0=\", false, function () {\n  return [useHistory];\n});\n_c = RobotInfo;\nexport default RobotInfo;\nvar _c;\n$RefreshReg$(_c, \"RobotInfo\");","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","axios","jsxDEV","_jsxDEV","RobotInfo","_s","robotData","setRobotData","history","fetchRobotData","token","localStorage","getItem","alert","push","response","get","headers","Authorization","data","error","console","style","display","justifyContent","alignItems","width","height","flexDirection","children","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","to","_c","$RefreshReg$"],"sources":["/home/ros/Desktop/github/value_one/src/RobotInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nconst RobotInfo = () => {\n  const [robotData, setRobotData] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchRobotData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          alert('로그인이 필요합니다.');\n          history.push('/Login');\n          return;\n        }\n\n        const response = await axios.get('http://127.0.0.1:8000/user-service/RobotInfo', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setRobotData(response.data);\n      } catch (error) {\n        console.error(error);\n        alert('로봇 정보를 가져오는 데 실패했습니다. 다시 시도해주세요.');\n      }\n    };\n\n    fetchRobotData();\n  }, [history]);\n    \n    return (\n        <div style={{ \n        display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100vh', flexDirection: 'column', \n        }}\n        >\n\n        <h1>로봇 정보 화면입니다</h1>        \n         \n       { <div style={{ marginTop: '20px' }}>\n        <Link to=\"/Login\">\n        <button>로그인 화면으로</button>\n        </Link>      \n      </div> }\n     </div>\n    );\n};\n\nexport default RobotInfo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMW,OAAO,GAAGR,UAAU,EAAE;EAE5BF,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACVG,KAAK,CAAC,aAAa,CAAC;UACpBL,OAAO,CAACM,IAAI,CAAC,QAAQ,CAAC;UACtB;QACF;QAEA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,8CAA8C,EAAE;UAC/EC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASR,KAAM;UAAE;QAC9C,CAAC,CAAC;QACFH,YAAY,CAACQ,QAAQ,CAACI,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBP,KAAK,CAAC,kCAAkC,CAAC;MAC3C;IACF,CAAC;IAEDJ,cAAc,EAAE;EAClB,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EAEX,oBACIL,OAAA;IAAKmB,KAAK,EAAE;MACZC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,OAAO;MAAEC,aAAa,EAAE;IAChH,CAAE;IAAAC,QAAA,gBAGF1B,OAAA;MAAA0B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAEnB9B,OAAA;MAAKmB,KAAK,EAAE;QAAEY,SAAS,EAAE;MAAO,CAAE;MAAAL,QAAA,eACnC1B,OAAA,CAACJ,IAAI;QAACoC,EAAE,EAAC,QAAQ;QAAAN,QAAA,eACjB1B,OAAA;UAAA0B,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAClB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAC5B,EAAA,CA1CID,SAAS;EAAA,QAEGJ,UAAU;AAAA;AAAAoC,EAAA,GAFtBhC,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}